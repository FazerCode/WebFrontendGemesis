{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Despot\\\\OneDrive\\\\Dokumente\\\\NFTProject\\\\WebFrontendGemstones-develop\\\\gemstones-frontend\\\\src\\\\components\\\\Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from 'web3';\nimport { connectWallet, getCurrentWalletConnected //import here\n} from \"../utils/interact.js\"; //TODO: MAKE THE NEW HOME?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Minter = props => {\n  _s();\n\n  //State variables\n  const [walletAddress, setWallet] = useState(\"\"); //users wallet address\n\n  const [status, setStatus] = useState(\"\"); //User replies with string written to contract\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {//TODO: implement\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Minter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83E\\uDD8A Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F Alchemy NFT Minter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Simply add your asset's link, name, and description, then press \\\"Mint.\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDDBC Link to asset: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. https://gateway.pinata.cloud/ipfs/<hash>\",\n        onChange: event => setURL(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDD14 Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. My first NFT!\",\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270D\\uFE0F Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. Even cooler than cryptokitties ;)\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minter, \"cR6Zg2tMfWDzW04DeJ65de+yY4M=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["C:/Users/Despot/OneDrive/Dokumente/NFTProject/WebFrontendGemstones-develop/gemstones-frontend/src/components/Minter.js"],"names":["useEffect","useState","Web3","connectWallet","getCurrentWalletConnected","Minter","props","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setURL","address","connectWalletPressed","walletResponse","onMintPressed","length","String","substring","event","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from 'web3';\nimport {\n  connectWallet,\n  getCurrentWalletConnected //import here\n} from \"../utils/interact.js\";\n\n//TODO: MAKE THE NEW HOME?\nconst Minter = (props) => {\n\n  //State variables\n  const [walletAddress, setWallet] = useState(\"\");    //users wallet address\n  const [status, setStatus] = useState(\"\");  //User replies with string written to contract\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n \n  useEffect(async () => { \n    const {address, status} = await getCurrentWalletConnected();\n    setWallet(address)\n    setStatus(status); \n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => { //TODO: implement\n    \n  };\n\n  return (\n    <div className=\"Minter\">\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>ü¶ä Connect Wallet</span>\n        )}\n      </button>\n\n      <br></br>\n      <h1 id=\"title\">üßô‚Äç‚ôÇÔ∏è Alchemy NFT Minter</h1>\n      <p>\n        Simply add your asset's link, name, and description, then press \"Mint.\"\n      </p>\n      <form>\n        <h2>üñº Link to asset: </h2>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\n          onChange={(event) => setURL(event.target.value)}\n        />\n        <h2>ü§î Name: </h2>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. My first NFT!\"\n          onChange={(event) => setName(event.target.value)}\n        />\n        <h2>‚úçÔ∏è Description: </h2>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. Even cooler than cryptokitties ;)\"\n          onChange={(event) => setDescription(event.target.value)}\n        />\n      </form>\n      <button id=\"mintButton\" onClick={onMintPressed}>\n        Mint NFT\n      </button>\n      <p id=\"status\">\n        {status}\n      </p>\n    </div>\n  );\n};\n\nexport default Minter;\n"]},"metadata":{},"sourceType":"module"}