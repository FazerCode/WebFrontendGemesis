{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar throttle = function throttle(fn) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var last;\n  var timer;\n  return function () {\n    var now = +new Date();\n    var timePassed = !!last && now < last + threshold;\n\n    if (timePassed) {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        last = now;\n        fn();\n      }, threshold);\n    } else {\n      last = now;\n      fn();\n    }\n  };\n};\n\nvar _default = throttle;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Despot/OneDrive/Dokumente/NFTProj/WebFrontendGemstones/gemstones-frontend/node_modules/react-scrollspy/lib/throttle.js"],"names":["Object","defineProperty","exports","value","default","throttle","fn","threshold","arguments","length","undefined","last","timer","now","Date","timePassed","clearTimeout","setTimeout","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,EAAlB,EAAsB;AACnC,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAApF;AACA,MAAIG,IAAJ;AACA,MAAIC,KAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,GAAG,GAAG,CAAC,IAAIC,IAAJ,EAAX;AACA,QAAIC,UAAU,GAAG,CAAC,CAACJ,IAAF,IAAUE,GAAG,GAAGF,IAAI,GAAGJ,SAAxC;;AAEA,QAAIQ,UAAJ,EAAgB;AACdC,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAA,MAAAA,KAAK,GAAGK,UAAU,CAAC,YAAY;AAC7BN,QAAAA,IAAI,GAAGE,GAAP;AACAP,QAAAA,EAAE;AACH,OAHiB,EAGfC,SAHe,CAAlB;AAID,KAND,MAMO;AACLI,MAAAA,IAAI,GAAGE,GAAP;AACAP,MAAAA,EAAE;AACH;AACF,GAdD;AAeD,CAnBD;;AAqBA,IAAIY,QAAQ,GAAGb,QAAf;AACAH,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar throttle = function throttle(fn) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var last;\n  var timer;\n  return function () {\n    var now = +new Date();\n    var timePassed = !!last && now < last + threshold;\n\n    if (timePassed) {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        last = now;\n        fn();\n      }, threshold);\n    } else {\n      last = now;\n      fn();\n    }\n  };\n};\n\nvar _default = throttle;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}